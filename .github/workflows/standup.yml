name: Handle Standup
on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'
jobs:
  standup:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      repository-projects: read
    steps:
    - run: |
        echo "Log level: ${{ github.event.inputs.logLevel }}"
        echo "Tags: ${{ github.event.inputs.tags }}"
    - uses: actions/checkout@v2
    - run: pip install -r .github/requirements.txt
    - run: |
        export DATE="$(date '+%Y-%m-%d')"
        export FULLNAME="docs/standup/$(date '+%Y/%m/%d').markdown"
        export BRANCHNAME="standup/${DATE}"
        echo "BRANCHNAME=${BRANCHNAME}" >> "${GITHUB_ENV}"
        echo "DATE=${DATE}" >> "${GITHUB_ENV}"
        echo "FULLNAME=${FULLNAME}" >> "${GITHUB_ENV}"
        echo "::set-output name=BRANCHNAME::${BRANCHNAME}"
        echo "::set-output name=DATE::${DATE}"
        echo "::set-output name=FULLNAME::${FULLNAME}"
      id: BASENAME
    - run: mkdir -p $(dirname ${{ steps.BASENAME.outputs.FULLNAME }}) || true
    - run: python3 .github/standup.py standup > ${{ steps.BASENAME.outputs.FULLNAME }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - run: cat ${{ steps.BASENAME.outputs.FULLNAME }}
    - uses: JasonEtco/create-an-issue@v2
      id: create
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        filename: ${{ steps.BASENAME.outputs.FULLNAME }}
        update_existing: true
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"
        branch: ${{ env.BRANCHNAME }}
        commit-message: |
            standup: ${{ env.DATE }}
        title: |
            standup: ${{ env.DATE }}
        body: |
            This is the day's standup.

            Closes #${{ steps.create.outputs.number }}
        labels: standup
        committer: "GitHub <noreply@github.com>"
        author: "GitHub <noreply@github.com>"
    - name: merge
      run: |
          git checkout main
          git merge --no-ff --log 1000 standup/${{ env.DATE }}
